# Generated by Django 4.2.6 on 2023-10-10 11:18

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("home_address", models.TextField(blank=True, null=True)),
                ("phone_number", models.PositiveIntegerField(blank=True, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("username", models.CharField(blank=True, max_length=50, null=True)),
                ("is_patient", models.BooleanField(default=False)),
                ("is_expert", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Expert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Hospital",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("contact", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[("PRIVATE", "Private"), ("PUBLIC", "Public")],
                        max_length=10,
                    ),
                ),
                ("mission_statement", models.TextField()),
                (
                    "ministry_of_health_certificate",
                    models.FileField(
                        upload_to="<django.db.models.fields.CharField>/ministry_of_health_certificate"
                    ),
                ),
                (
                    "hospital_photo",
                    models.FileField(
                        upload_to="<django.db.models.fields.CharField>hospital_photo"
                    ),
                ),
                (
                    "business_certificate",
                    models.FileField(
                        upload_to="<django.db.models.fields.CharField>/business_certificate"
                    ),
                ),
                ("owners_name", models.CharField(max_length=150)),
                ("owners_phone_number", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientPreviousHospitalDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("address", models.TextField()),
                ("phone_number", models.PositiveIntegerField()),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="userauth.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NextOfKin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("phone_number", models.PositiveIntegerField()),
                ("address", models.TextField()),
                ("relationship", models.CharField(max_length=150)),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="userauth.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExpertHospitalDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "medical_department",
                    models.CharField(
                        choices=[
                            ("Cardiology", "Cardiology"),
                            ("Dermatology", "Dermatology"),
                            ("Endocrinology", "Endocrinology"),
                            ("Gastroenterology", "Gastroenterology"),
                            ("Hematology", "Hematology"),
                            ("Infectious Disease", "Disease"),
                            ("Internal Medicine", "Medicine"),
                            ("Nephrology", "Nephrology"),
                            ("Neurology", "Neurology"),
                            ("Obstetrics and Gynecology", "Obstetrics and Gynecology"),
                            ("Oncology", "Oncology"),
                            ("Ophthalmology", "Ophthalmology"),
                            ("Orthopedics", "Orthopedics"),
                            ("Pediatrics", "Pediatrics"),
                            (
                                "Physical Medicine and Rehabilitation",
                                "Physical Medicine and Rehabilitation",
                            ),
                            ("Psychiatry", "Psychiatry"),
                            ("Pulmonology", "Pulmonology"),
                            ("Radiology", "Radiology"),
                            ("Rheumatology", "Rheumatology"),
                            ("Surgery", "Surgery"),
                            ("Urology", "Urology"),
                        ],
                        max_length=150,
                    ),
                ),
                (
                    "age_category_expert_treat",
                    models.CharField(
                        choices=[
                            ("ADULT", "Adult"),
                            ("TEEN", "Teen"),
                            ("Child", "Child"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "expert",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="userauth.expert",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="expert",
            name="hospital",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="userauth.hospital"
            ),
        ),
        migrations.AddField(
            model_name="expert",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
